Chapter 2: Intelligent Agents (4 hours)      2.1 Introduction to Agents, Structure of Intelligent Agent, Properties of Intelligent Agents  What is an Agent? An agent is an entity that perceives its environment through sensors and acts upon that environment using actuators to achieve a specific goal.  Example: A self-driving car uses sensors like cameras and radar to perceive the road conditions and actuators like steering, braking, and accelerating to navigate.  Structure of an Intelligent Agent:  - Sensors: Devices that allow the agent to perceive its environment (e.g., cameras, microphones).   - Example: A smart thermostat uses temperature sensors to adjust room temperature.  - Actuators: Tools that enable the agent to take actions based on its decisions (e.g., motors, speakers).   - Example: A robot vacuum uses actuators like wheels for movement and suction for cleaning.  - Agent Program: The software that makes decisions based on sensor inputs and directs the actuators.   - Example: A robot programmed to pick up items based on object recognition.  Properties of Intelligent Agents:  1. Autonomy: The ability to operate without human intervention.    - Example: A drone that can fly and navigate on its own.  2. Reactivity: Ability to respond to environmental changes.    - Example: A thermostat reacts when the temperature drops.  3. Proactiveness: Anticipates future events and takes actions accordingly.    - Example: A personal assistant AI scheduling reminders.  4. Social Ability: Interacts with other agents or humans.    - Example: A chatbot that answers customer queries.   2.2 Relationship Between Agents and Environments  Definition: An environment is the world or surroundings in which an agent operates. It influences the agent's actions and behavior.  Types of Environments:  1. Accessible vs. Inaccessible:    - Accessible: The agent can perceive the entire environment.    - Inaccessible: The agent perceives only part of the environment.    - Example: A chess game (accessible) vs. autonomous driving (inaccessible).  2. Deterministic vs. Non-deterministic:    - Deterministic: Outcomes of actions are predictable.    - Non-deterministic: Outcomes are uncertain.    - Example: Playing a game of chess (deterministic) vs. poker (non-deterministic).  3. Episodic vs. Sequential:    - Episodic: Each action is independent of previous ones.    - Sequential: Actions depend on past decisions.    - Example: Image recognition (episodic) vs. chess (sequential).  4. Static vs. Dynamic:    - Static: The environment does not change during the decision-making process.    - Dynamic: The environment can change during decision-making.    - Example: A robot in a factory (static) vs. a self-driving car (dynamic).  5. Discrete vs. Continuous:    - Discrete: States are distinct and countable.    - Continuous: States can change continuously.    - Example: A board game (discrete) vs. robot motion (continuous).   2.3 Types of Agents  1. Simple Reflex Agents:    - Operate based on predefined rules. They do not consider past actions.    - Example: A simple room heater that turns on when the temperature drops below a certain threshold.  2. Model-Based Reflex Agents:    - Maintain an internal model of the environment and make decisions based on past and current percepts.    - Example: A robot vacuum that remembers areas it has already cleaned.  3. Goal-Based Agents:    - Make decisions based on goals they are trying to achieve. They use search and planning algorithms.    - Example: A delivery robot that plans its route to avoid obstacles and reach its destination.  4. Utility-Based Agents:    - Maximize a utility function, making decisions that maximize satisfaction.    - Example: A movie recommendation system that recommends films based on your preferences.  5. Learning Agents:    - Improve performance over time by learning from experience.    - Example: An AI game player that learns new strategies after each game.    2.4 Performance Evaluation of Agents: PEAS Description  The PEAS framework helps evaluate agents by defining their performance criteria, environment, actuators, and sensors.  | Component                                 | Description                                                                                                                        | |----------------------------------- |-------------------------------------------------------------------------------------- | | Performance Measure (P)     | Criteria to evaluate the agent's success (e.g., speed, accuracy).           | | Environment (E)                         | The surroundings where the agent operates (e.g., office, city).                | | Actuators (A)                               | The tools or mechanisms that allow the agent to act (e.g., wheels).     | | Sensors (S)             |  Tools that allow the agent to sense surroundings(e.g., cameras, microphones). |  Example (Automated Taxi System PEAS):  | Component                              | Description                                                                | |--------------------------------- |----------------------------------------------------   | | Performance Measure (P)  | Timely arrival, passenger comfort, safety.  | | Environment (E)                      | City roads, traffic conditions, weather.        | | Actuators (A)                            | Steering, accelerator, brakes, horn.               | | Sensors (S)                                | GPS, camera, radar, speedometer.                |    Summary of Chapter 2:  - Intelligent agents interact with their environment and make decisions to achieve specific goals. - Agents can be classified as reflexive, model-based, goal-based, utility-based, and learning agents. - The environment significantly influences how agents operate. - The PEAS framework provides a structure to evaluate intelligent agents.   Learning Outcomes:  - Understand the structure and properties of intelligent agents. - Recognize different types of agents and their behavior. - Apply the PEAS framework to design and evaluate agents. 